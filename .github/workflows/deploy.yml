name: Deploy runsync to GCE

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker to use gcloud as a credential helper
        run: |
          gcloud auth configure-docker gcr.io

      - name: Build and Push Docker Image to GCR
        run: |
          IMAGE_NAME=gcr.io/${{ secrets.GCP_PROJECT_ID }}/runsync:latest
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.GCE_HOST }} >> ~/.ssh/known_hosts

      - name: Upload .env
        run: |
          echo "${{ secrets.ENV_FILE }}" | ssh ${{ secrets.GCE_USER }}@${{ secrets.GCE_HOST }} "cat > ~/runsync/.env"

      - name: Deploy to GCE
        run: |
          ssh ${{ secrets.GCE_USER }}@${{ secrets.GCE_HOST }} << 'EOF'
          IMAGE_NAME=gcr.io/${{ secrets.GCP_PROJECT_ID }}/runsync:latest

          # Add GitHub to known_hosts to avoid host verification errors
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts

          # Ensure Docker is installed
          if ! command -v docker &> /dev/null; then
            sudo apt-get update
            sudo apt-get install -y docker.io
            sudo systemctl start docker || sudo service docker start
            sudo systemctl enable docker || sudo service docker enable
          fi

          gcloud auth configure-docker gcr.io

          sudo docker pull $IMAGE_NAME

          sudo docker compose -f docker-compose.yml up -d



          # Check if runsync directory exists, create if not
          if [ ! -d "runsync" ]; then
            mkdir runsync && cd runsync
          else
            cd runsync
          fi

          # Ensure .env is present (copy from a safe location or create it here)
          if [ ! -f .env ]; then
            echo "Missing .env file! Please upload it to the server."
            exit 1
          fi

          # Check if nginx is installed, install if not
          if ! command -v nginx &> /dev/null; then
            sudo apt-get update
            sudo apt-get install -y nginx
          fi


          EOF

